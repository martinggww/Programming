
Tutorial two: OOP basics
1. static function or variables are shared by all instances.
2. private function can't be called by referenced object.
3. Non-static function or variables can't be used in static function.
4. abstract class can't be instanced.Period.
5. All abstract methods must be overriden, but not all methods need to be overriden.

6. Interface is class only has abstract methods
7. You can add as many interfaces to a class using implementations as you want
8. Use only public static and final fields.
9. By default all methods are abstract, so no abstract key words are written.

Tutorial three: Strategy Pattern.

If sub-classes have different behaviors, define an interface in parent/abstract
class, and initiate the behaviors at run time.
Animals
+flyingType : Flys-----------------><interface>     Flys
+tryToFly(): String                   ^              ^
+setFlyingAbility():void              | (implements) |
^    (Extends)      ^             ItFlys         CantFly
|                   |
Dog                 Bird

Use Strategy Pattern when:
1. When you want to define a class that will have one behaivor that is 
similar to other behaivors in a list
2. When you want to use one of the behaviors dynamiclly.
3. Often reduces long lists of conditional.
4. Avoids duplicate code
5. Can hide complicated/secret code from user
6. Negative, increased number of objects or classes.
